package datastructuresproject3;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 * @param <T>
 * @file TargetUser.java
 * @description A program that get recommendations according to the target user and movies.
 * @assignment Data Structures Project 3: Movie Recommendation
 * @date 26.05.2023
 * @authors Beyza Yıldızlı @beyzayildizli10@gmail.com & Merve Öğ @merve.og@stu.fsm.edu.tr
 */
public class TargetUser<T extends Comparable> extends javax.swing.JFrame {

    /**
     * Creates new form targetUser
     */
    int userNum = 0;
    int selectedUserId = 0;
    int movieNum = 0;

    GenericCast g = new GenericCast();
    Operations h = new Operations();
    FileOperations<T> f = new FileOperations<>();

    String rateFile = "src/datastructuresproject3/main_data.csv";
    String targetFile = "src/datastructuresproject3/target_user.csv";

    Integer[][] targetUserMatrix = f.targetUserMatrix();
    Integer[][] rateMatrix = f.rateMatrix();
    String[][] movieMatrix = f.movieMatrix();

    public TargetUser() {
        initComponents();
        populateComboBoxFromCSV(targetFile);
    }

    /*Adds the ids of the csv file whose path is given to the comboBox*/
    public void populateComboBoxFromCSV(String csvFilePath) {
        try ( BufferedReader reader = new BufferedReader(new FileReader(csvFilePath))) {
            String line;
            boolean isFirstLine = true;
            while ((line = reader.readLine()) != null) {
                if (isFirstLine) {
                    isFirstLine = false;
                    continue; // İlk satırı atla
                }
                String[] values = line.split(",");
                if (values.length > 0) {
                    targetUserBox.addItem(values[0].trim());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recommentButton1 = new datastructuresproject3.MyButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        targetUserBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userNumSpinner = new javax.swing.JSpinner();
        movieSpinner = new javax.swing.JSpinner();
        recommendButton = new datastructuresproject3.MyButton();
        backkButton = new datastructuresproject3.MyButton();

        recommentButton1.setText("recommendation");
        recommentButton1.setRadius(20);
        recommentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recommentButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(184, 212, 213));

        jScrollPane1.setViewportView(list);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel4.setText("RECOMMENDATIONS:");

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel1.setText("Target User ID:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel2.setText("similar users:");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setText("highest rated movies:");

        userNumSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        userNumSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                userNumSpinnerStateChanged(evt);
            }
        });

        movieSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        movieSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                movieSpinnerStateChanged(evt);
            }
        });

        recommendButton.setText("recommendation");
        recommendButton.setRadius(20);
        recommendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recommendButtonActionPerformed(evt);
            }
        });

        backkButton.setText("back");
        backkButton.setRadius(20);
        backkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(recommendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(168, 168, 168)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(targetUserBox, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(97, 97, 97)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(movieSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(userNumSpinner)))))
                .addContainerGap(360, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(userNumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(movieSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(targetUserBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(recommendButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*When the value in userNumSpinne changes, it makes the new value of userNum variable the value in spinner.*/
    private void userNumSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_userNumSpinnerStateChanged
        userNum = (int) userNumSpinner.getValue();
    }//GEN-LAST:event_userNumSpinnerStateChanged

    /*When the value in movieSpinner changes, it changes the new value of movieNum to the value in the spinner.*/
    private void movieSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_movieSpinnerStateChanged
        movieNum = (int) movieSpinner.getValue();
    }//GEN-LAST:event_movieSpinnerStateChanged

    /*It creates a heap by taking advantage of the cos similarity between targetUserMatrix and mainMatrix.
    It takes the desired number of max users from the resulting heap and adds the desired number of movies to a list according to these users. 
    Finally, jList prints this list.*/
    private void recommend() {
        CosMaxHeap<Integer> m = new CosMaxHeap(f.rowNumber(rateFile) - 1);
        userNum = (int) userNumSpinner.getValue();
        movieNum = (int) movieSpinner.getValue();
        selectedUserId = Integer.parseInt((String) targetUserBox.getSelectedItem());
        
        try {
            f.fillHeapWithUserId(selectedUserId, m, targetUserMatrix);
        } catch (IOException ex) {
            Logger.getLogger(TargetUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        T[] closeUsers = (T[]) h.closeUsers(userNum, m, selectedUserId, targetUserMatrix);
        DefaultListModel<String> liste = new DefaultListModel<>();
        list.setModel(liste);
        
        for (int i = 0; i < closeUsers.length; i++) {
            List<Integer> bestMovies = h.bestMovies(f.matrixToArray(rateMatrix, (Integer) closeUsers[i]), movieNum);//hatalıı
            List<String> movies = h.movieNamesArray(bestMovies);
            for (int j = 0; j <  movies.size(); j++) {
                liste.addElement("" +  movies.get(j));
            }
        }
    }

    private void recommendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recommendButtonActionPerformed
        recommend();
    }//GEN-LAST:event_recommendButtonActionPerformed

    private void recommentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recommentButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recommentButton1ActionPerformed

    /*Returns to the page named as FirstPage.*/
    private void backkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backkButtonActionPerformed
        FirstPage firstP = new FirstPage();
        firstP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datastructuresproject3.MyButton backkButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list;
    private javax.swing.JSpinner movieSpinner;
    private datastructuresproject3.MyButton recommendButton;
    private datastructuresproject3.MyButton recommentButton1;
    private javax.swing.JComboBox<String> targetUserBox;
    private javax.swing.JSpinner userNumSpinner;
    // End of variables declaration//GEN-END:variables
}
